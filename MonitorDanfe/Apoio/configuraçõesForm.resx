<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIADFJQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAACV/SURBVHja7Z0JeFvllfdvywDTfv1mCqWdaWln+nXma4EsdpyQhGA7iWPHzsLWTimF
        EiiUMmULWbxkM2bfkthOaAYoywyF6TrQzhQ+aKGFEEKAIEvyot2LJMurdsuWDfH7nXMlhzjeJEe698r+
        n+f5P3KIsW+ke373fc97FkmCzUq75AmPtOrhNqmk1i2V1LiktdXtUnGt+7P09TdXV7u+v+wex54FFZZD
        87aaO+dsNg1esKlp+Pw7mwS9Cvrzx3O3mAbo79z0+iqpJrvc8uPsCvN5S+6y/c35GxulrDKztHCnVVqy
        vUmSqgTecBhMC7Zmn00q3tMjOz2reH/7afT6f0k3kX5NspPCq/c6RcEjbSL33maxaIdNzN1iFgyAiURg
        6CcwtBEMXp5fat64oMJ8Qe6Djr9iECzaYZXmlZmkFVUt+ABgMLWMn/Zr5Cc+qdp5RkmN82Jy9v1xp/+I
        JMZTcbVLhsHSKocg554UBHEYDBMMnPO2mp7IrrDk5t1rPyOrzCIt3umQFm634YOAwZS04mqPJH1TyI5f
        fDDIT/4c0uOkromcfiIV7mYQ2AUt/6cEAYtA0EPf+9SCCmu2JD0q0bZCOvs2q5S/04wPBgZL+1Ofl/m0
        v19T42QAfIH+vIXkSNbxT1bBI620NbDKMYEEQdBCq4fShdutZ80ttUhLK+1YDcBgaXX+aqesNbWy82eR
        47402VI/WXGc4OJ7mwXt+xOCAMGCg4cv5VRY5p93e720aIedVgRWfFAwWKptTa2Lnvouqeh+66fIWS8h
        NaTK8U/W8gdbRFZZYluC+GqgMavcsv7vfnCYVgEWggC2AzBYSpf97PyX7HNxhP96kiddzv/JlqBN0P4+
        GQh4aEtw9fo9lk8zBHJIMBgsBc4v7/v3uj9NrzeQetPt/CNa9WiSENhk6p1fZt4gSb+XFu20Sgu3ISYA
        g03biuW9vktavaeNX68kdSvl/MchQCsBWt4nsxLonF9mueIbt+ikJZXN0tJKQAAGS37Pv88mrd7XIpVU
        y5l9eamI9E9XKx9qTfiYMA6B5uxy87ILNpuka5724MOEwZJe+u/1xJb+Na6v0eubajn/iHLvaxbk0AlD
        YO4W0xsLt1m+sqDcgpMBGCwZW70/tu9fs9d1Br1Wq+38I9mDi3fZEwbA+ZuaeNWwN/fe1tP5eHBJVTM+
        WBgsESt4ol1au0fe/68lebUAgJGg4Pwkjgcv2GTyZpdbSuZsaiKodeGDhcGmfPrv42W/k3U2Od0fteL8
        I+JEoUSzBeNbgdcW7bCdlbPNKi2txNEgDDapFT3mpKe/vAXYQBrQGgCK9jhFdhJHgwSLwawy84bz7jRJ
        K+4DAGAw2dbv9UhX7O6WE3xKTlJxrevz9PqG1px/VEAwuVXAG4t2Ws9asM0iLaw6ig8fNnuNi3jW1rTF
        zvdr26S1tXKg75ySWtfXSXNI/4f+fA3X8GsVALwKyEoqFtAUySq3fHt+GQGgHMeCsFloxbVuadWBDtnx
        l+0P8OvXSTeS/oN0lOQmdZLaST6tOv+IuIQ44RMBXgVsNT+d/1Db6Yt22nEzwGZZYK/WKRXtH1niu78U
        L+E1prKST2mteKiVE36SSg7KKbf8U3YpCoVgs8i4Nx837lgXC+xx445XSB9nquOfWDqcXZ5cMDC7zLIh
        iwCweBfSg2Gzwfkf80iXVndIhfta2fm5XVddpjv+iVpcmeQ2YIvpUUl6WlqyC5mBsFlguZX1sSYeNa7z
        Se/PJOefzmnAvC2mQ/T0P3vhdgAANlNMCOmyB1ql4v1uOYHn5CO9klrXZ+j1uZnm/HKR0MNJxwFa55da
        zp23FXEAWAYbV+qVVHd9coZf7ZLWV9kZAJ8jh/9yfK+/hvb+36XX+0ihmQgAbiiaTJUgrRZ6s8stS+Yh
        EAjLTMd3S2sOeI47/tpa16dLqt1fpa/XxR39ZZKJ1BN3+n7SsZno/HIgUM4HSC4QuKDCsoFnC8BgGWMl
        1S3SmmcELeedI+25PkevBaS9pHotJ+2k+yRgwbakAMAnB3fOxwoAljnOT0/9alds+Eat87NrYk/7/8qE
        ZJ20lwgTAHK2WcV5GxMHAD39tzIA8u5pkRYjKQimVVv1mFtat5er8lzS5fd6uRPvQtLzpOBsd/zjqnaJ
        ZXc7kgoEzttqepGg8Y/fuqNBWryL+waiQAimtb0+R/P3xfvx7ZOX+3eQmuH04zcKyX+gJZmkIB4z9kF2
        meXSkurm03IIANkVgABMM87vktbK9fjci8/J+fpPa7EsV3MnAo+2iUU7bYlPFtrU5KWtwI7Fu2z/m8eL
        ZW21oVIQpq7FnN4tL/vppp5P+jOcO7mg4JK77AlDgL5viLYEjy/cZv1CdrlVmreFJw5j9DhMDeev5fJc
        d3zmnutC0hE49fS2BBdVOZKBwDBB4Oc5283nZJebpKyyJtyMMGVtxU+7peX/1hGP9rvmwvlPHQJLk1sJ
        cELRs4t22D7PrcNyEBOAKWnr9raMPPn/gfQanDg124ELd9mSyRH4eH6p+aGL77afuWi7VVq0AxCAKWAn
        tOH6LL0+DudNYWBwT3KjxQgC4axS8/Xn3tAgLb3LKi2rQp4ALI126cM9ctBv9T4zQ+BmUgSOm/rGIXO3
        JlUwZCdo5HDfgH++vQE3KSx9VnjAMTJ/j/f9FjhsenTR3Y6k+gbM22r65eJK6+d4yvBizBaEpSXqX91K
        +36O+rvPxNJfgVbiyXUP6s8qM1/9rTuapNz7HLhZYam3y/YPxff/zpVKjtyercpLvpX42wu2W7/IWYKL
        7wYEYKkO/vGRX7WTn/7PwEEVqhxMLiA4NL/MfP35G5ukix9qwQ0LS52tiffljyf8dMBBFRwrllQPQfNr
        iyodf7NgO+IAsBQaD+ZYWcMnAK5KOKayHYTmlyY1XNRPW4AVWWUWaclOTBeGpWr5Xyuf+3+BbspDcExl
        MwSTSQ6KnQiY75fy/0taVtmKGxeWguX/Xk8s8afGlaul0dsIBk4YDHx30Xb72TkV6CQMSwUAdnfTCkCO
        AWwkDcMpldWqR9vYqZPZBnRnl1mz521FajAsZct/9+l0Mz4Lh8yI04CPs8stP+Y2YouqXLiBYacIgFje
        /1n0ehAOqU4bMTkOsDGp04C7z7/dIOXc3YUbGHbqACB9DS2+Mic1mLYMz+c92HrmhZUoDoKlBgDZpG44
        o/JaUxvLB0iyNuDtJZW2sxbtQCAQlhoA5KKtt4onAfe3cHAv8RXAVrNx0Q7bl7hZCAyWCgCsRntv9cRd
        hJMCwBaTOWe79e8XoFMQDACYlQAwLQQAYCkEQB62AGpvAZKKAegv3Gn7IsaKz3DT6/VSXV2dZDQa06ZL
        98sNQHLiAzzhkCoEAXM5CJgUAMzvLK60n11wrzVt94VOp5Peeust6fDhw3BExR2/ziCrbuT1Q72kS5MO
        /I9ZuvgR91eLa1wtcMjMOAa8YLPpeWmD5/SXXjem5744qpcMdUa694zy/afT6eV7EaaAGUacXmc4nd70
        PPq6gvRAumTQG+7/y7v1Ndc+2dpZDGdURYt32RIeKHoe6Uf7Gw83Gg33p/O+IN1Hupn0jQaDUQaAARBI
        r/Gyi99kcsoz6Y0vJ3WTRLp19EOD2PYLu1hdDWfUeirwHNoq7Pl1g6g3pP++IB0jfUDK09F9adQDAGm1
        o7r3R5b/a0l+JZyfRR+s2PffFjikSsVA8xLsEsyrhCUVTeLF1+vlz0yp+4P0Z4POcI5eBwCk1WjZLx05
        YvwUveHVCn648s304l+axOWPOQW2AQofASZxAvAtAsC6+5vE20eMwqAsAAKklXpsAZQI/ul5+f9zJQFA
        2w5x6D2j+NHTLXKTCjimgvv/SnvCy38GwJafNYq6OkWdn9VPuhIAUODYT2+oYwA8r1f+QxYPv2jFCkDJ
        9uBJtATj4F9OaZN47hXFl/+sAb3e8D0AQDkA/Fxp5+eb6ndvNorv/LQNENBgNyB++l/xUJO8UjPUAQCz
        GQCDpHaSK9V6/6jRtennzX6cBigT/c/Zbk2mEcix+15o7CBQu9Lx2ZN6ScMAgPYBoCfNI51L+moq1Waq
        +/K1T7ZeSTdoAE6a/vz/OZuTyv83bHmqKcvWqP9Kqj930pdJN5AiAID2AfC+vs549ki2YCr1wp9M0rJH
        PJ+hG/R5OGman/7brMkNBSk133JbjU6iLYCUjs9er9NfSq99AEBmAOAcTtNMtV3zcANPB+IpQTwgpBXO
        msaBIMl1Av5/C3fazlqwzSot2pX6LkBxAFwGAMxyABTWerg9uLS6uvlTdKOWkgbhsKlVwSPJDQOhbUJH
        drl15dzNFmnNs+kZBgIAAADHrbjGGS8Rdv8tvb4Ap03t0n9hcoG/wfmllk23vieknB0O6cIqKwAAAKQX
        AGyrd8dnBda6vkmv78J5UzMFaOld9mScn8t+n15Saf9czjablF2RvgagAAAAMMrW7HNLxftc0poaN68E
        ltINXA8nPjUtu8eRbNefFxdst/7dggqTlFNWn977DgAAAMZsBWpdUtE+p7R+t5vjAgV0EzfCkaf35Oeg
        X5JHfi8v2Gb+xzllFumc24zSnCoBAAAAygJA3grw1KB9HBTk1YBrGd3Q78Gpk3P+ZXc7EnZ+WvYPz91q
        /nVOhfVrc7aYpI0HHFLBjqb033cAAAAwkZXUOMn5Y4FBgsBcev0d6WM4+BR5/nuccqFPosd99H3heaXm
        6gXbHedklZqlqrphaekuZXr+AQAAwOQxAXL+tbVuzg/guMA5dIPfg0EiE2vlw61iwbYkmnxsMdmyyszX
        XVxlP3NBhVWac0eDtPgBt3L3HQAAAEwdGGyXLr7lKAcFeWvwVyWxuMAfSFE4fUyFu51iaZVdzN2a6JLf
        FJy31fwswWL+VzboJZ70k6NCq28AAABIYkvgkpOFYrkCTh4qej3pdVL/bF7uc6Avu9ySsOPP3WL6PX3/
        +ovuafnr7HKTtPguh7RQpVFfAAAAkBwEeCuw2y1DYPU+GQRn09dcRPRcPIX4o9mQ1FNAS/2Lqhwiq8wy
        5V6f8/nnbDY10xP/qewyc/Hindb/NW+LmZzeJuWUpz/SDwAAACm3tQSCS0aShmInBWfQ1xeQfkR6PH5q
        4IlPHeK04mOZFsVnsbPzU57793EVHy/zuZiHnuLjJvBwNJ+DeqR2+p6jpH20x79+QYX5G/kPtp4+v9Qs
        5WyzSIX/3pK27D4AAABQMD7QJq090DwyZSi2Mqhxn0ZbhS/Q198iFZE2kG6N1xhUkqq0rOK9rira01cV
        PNxWlXd/c9XiSnsVLdmryJmryNGrztvYJL+OiJz9Lvq7XfNKzduzys23075+HX39zwu3W8+55lfeT2eV
        miSCgLRop02aW2GWVlS1aOe+AwAAgFTZ6j3tUuGDnVJxjXsUEDJN9OSX6Kkv0VNfWvFgi7TsHod0ITkv
        OzE5u0ROP0r832iJL83dapL4CT+fvo+AIPH8vgsr7VLuziZJUnGZDwAAADAYAAAAwGAAAAAAgwEAAAAM
        BgAAADAAAAAAAGAAAAAAAMAAAAAAAIABAAAAAAADAAAAAAAGAAAAAAAMAIABADAAAAYAwAAAGAAAAwBg
        AAAMAIABADAAAAYAwAAAGAAAAwBgAAAMAIABADAAAAYAwAAAGAAAAwBgAAAMAIABADAAIOUm+kKSiPTR
        a/ATRUKaVNTfKx144YXT6nT65+p0BjGB3nvn8AefD3V3afLfMEzvbzQYkAI+v+RLQH6W3y8FA0HJ5/VJ
        QghN308RXZEkjhRJgx+eIF1my6N7UNLpTOvr6ur7SGIc9ev0pn9p1z2s/PXx+/v+Kil6aLk0cDBvSkVH
        dChfih5eEQdA2E8Kfomcv5h0Ld2oG7SqY+HAjZ621nfaHA4xntwtLc1DAd+t9L2a/Hcc6wv9sD8YuIMA
        UOpPQPR9GwN+//JwMPiZoD8gA0GzD5O6FXQzlkhDdFNGPyz6LGkp3aBX0416HWlDpmpIV/CDHl1pTYvu
        qWiL7mkxVk8NdesqfjqkW/kDxa/vQ3pv3yu4ZeBQ/lZy8NKBg/mTKnowf0v07fzvDB7O/+LgW7n0oYUD
        /GTKJcd/ixQiDWpdw+HgseFwQEygYY1f/9CxcHA4EggIr9cveqeQNyaf3x94IhwInhOilUCYQKBFC7y3
        nh2fnkqF59KN+RSphxQlDWa+Vn8U/bBETCT+e9Wu7WjRMYKAoCe7iL6Zm4gGom/lvUEgyOcVwD/RTXmE
        JCDlRFsBYm9gSgCcKL8vcP/H4fBpfQQBLdrQh4XS0NHCM+im3E8SkMI6UpAoAGJ6K6+R9/y3x59McEyF
        NRRKbBVwwmrAFPAF/p6kSQDE9/zfJLXBIVXQ0UJaBeQnBQEGwG44ozr6OBwUPp8/mVVAu9fn/zq9ahkA
        +SQ/HFINABSJ6KHlSQOgGs6YQQDw+r+hZQAM6QpXAgAAAAQAwCEBAAgAgAAACACAAAAIAIAAAAgAgAAA
        CACAAAAAAACAAAAAAACAAAAAAACAAAAAAACAAAAAAACAAAAAAAAY1KmshK6zMK5VaVBh5gDg45BfDPh6
        RaS3W1l5u8Wgv1duDKLmdfLP5J8NAKTI8d+nG/vPhSL68ioR/YOC4t/3R3K+w4UJQIC/Z50YMF4r+hv+
        lXRLyjRQf5OI6r/LTUcmB4EWABDu6RLNVqtoqG8Q9cZ6RdVAaqpvFE6HQ3bCya4z0Nkh7GYL/T8NabiO
        BuGwWEWoqxMAOEXnj/6lUPQ/skJEfpIn+m5UQTfliUhFvoj+ukB2sImcf8B4gwi2/bfwddmFt8eZWnW3
        CV+HXoRtNSKqu2RiCKgNgH5vjzA1Nok6nV5M0rU37aojsQN+FPSNe52h7k7RSIDiJqJpuwb62Qyjvp5u
        AGC6oidv/93LRd/3c9XVVbkicnOeiP5u1TgrAVqZ6L8n/O1v0+cTJAXSJPrZtLoM22rjKwENAqC9tVV2
        Pr0GZNAbhc/TLkTkpFZctD1os9sVgRRDwNXcPOGWBACYRHVF8lO377q4E16tsggC/Q8sl7cjo691leiz
        PkSfjTep9m7TE90vnUYRNXxv/FWAmgA4FgrQ0t+W1qdqcs6nFx4C0snX+VHQL6wmsyKg4t/B24yJ4gEA
        wOQAGHhypfqOPyKCUGRrvhh85+R4QKEINf+H6PWFFABAQN4ScIwhFhjUFAD8wkF7f62sABgA7eMA4Ph1
        6gyKrABabXZxDCuAaQGg/99WauPpPwKAzQSAQycDYJUI2x+LL9PTDwBfl00MGDdocQWgPQCMtwJg9ba7
        5S1Cuq/ByNuQjnbEAKa7AsgQAAzU/5gc0xKPAaTP+fnnB1t/Q79/rfZiAJkEAF6S899xtD5dv59/dqez
        bcKnPwAwUwBQJAflIua7aH/eIHp7e9Pg/D5a+neIgPMVMWC4RpunAJkEgJFgYF9vt7wa6Ha5Uir+mZwP
        MFU+AgAwUwAQ04DxOtFnuU+O1KdSfba9ItJUJqJ1l2k3DyDTAHBckVB6hEzAWQeAmHNyvkAalEg2IAAw
        DQAgFRgASBkAZnEtAAAAAAAAAAAAAAAAAAAAAAAAzGYAFKZBAEBaAMCR+mMpVsLViADADAJAvAxYVyKi
        uvUpFVcZjuQcAAApAsBQwCsf2XFdQIvNRrKnSDb5Z/a4XRMWIwEAMw0AhbKjci5AsPW3IuB6LbVyviJC
        zc/IZcEAQAoAMOj3ytWCI9/HKbupVazQiGEwFPABADMdAPSEDjU/K7y9nfGagGCKFYoXAjWI/sY7kQh0
        qgDwtLUqdh1dTicAMMNTgSNNpcLb057+egCCS8D95sQJQQDA1ADgNGCb2aJMNSCtBppppXEM1YAzGgBh
        x1Pxp7QC1YDdrbQVuBHVgNMGQJAAoFQ5sC7WmAQAmNkACDU/rVw5cHdbPBYAAEwLAMPxxiVKXUdHWxu2
        ADN9C2DaTvv/DgVKgkPC336ItgBXYAtwKjGAqK9XXgWMPKXr6lKseK8Bu8UiBxwBgJkMgEK5T1+w9Zex
        SsC0BAFjgUBfl5VgU44gYCqOARkC/HTma7aZzSkVN0XlUuDJnB8AmGHHgHWXiz7rIyLgepWe0u+QDqdQ
        BwkwvxL9DbdP3A8QAJheIhBf98cp1rEEWoIDADMxEYhXA+tkGKRWHPUvQSIQUoEBAO2nAhciFRgAAABQ
        DIRiIAAAAAAAAAAAAAAAAAAAzbYES5MAgFnaEmxVrC1YyoWWYCluChoUA94e4e/wyBOEUil/p2fK2YQA
        wMw7BeARYRFThdwYNKUy3yP6G26VTxjQFDQFAOCa/S6XU57dx/MBUi2eB9DU0CiXBA+jLfisAAB37fV7
        jsYqAnt7UqxueSIQlxozZJAIdIoA4Ke00WBM67Xyz6431MtTiAGAmZ0JyJOB5ZkAckFQII2DQQIi1PK8
        3HQEAJgmAJScYcjX0Gq3YzjoTB8NZqtVoBAoPhy0yyIGDD/AcFAMB50FK4AnMBx07HBQlzaHg7LcLS2a
        AYCB5PW4x0Tkef/PAzuVWgE4HQ6sAKYLgF8WiL4NGgEAjwe/d6Lx4Lvl8V3KjAdvFFHD97W3AmD19XTL
        gTW1IcCOx00/uO/feNcZ7OoQ9caGtF4n/2yeDxjq7kIMYDripywttyM7l8vOJ28F1BL9/siP8kT0twXj
        FgINGK4Wfs/78VVAIE3iikCvCDsep99ZrL0YwInOxaW29cZ6OQimtNjpeCvS7+2ZtBMwBwItTab0XAf9
        23mbwUeMwzgGPCUIRP9UKPrvIQjclCf6fsjKVVY35InIpnwx8AI5/wcTn//3N/xEBNyvyw07uD1YquXr
        MouQ42dycZAmTwFG77N98nBMfvopqTCJHT/Rajxu2MmrllRfBw8dnaojMACQxErgCN3Yr64S0ZdILxYo
        q/+h33kwkWIcLgm+VPTX3ywiTZtTq8aN8cBfsXbzACCkAqcFACeCQE0ldJ0jmYDpUKG2U4EhACCtAIAA
        AAAAAIAAAAAAAIAAAAAAAIC0AwC5DDYEjRIAMD3Fg2lHC6CTNVlfQLUA8FHAJ595c4Udj8KCnPJ74fW0
        i6i/FwBI0vl50GZ/42YRttWIsP0ANCLbXrkseFC3RjuZgHzuzvnuXAarr0tDj/0MlZyOTO+JubFJBLo6
        AIBEnb/uCrnHvrfHfTz9FRqRXx4NFnY8SRBYPxYCSgOAi1y0VACkRfF7wxCIjtMgBAAYq7B9v5zymv4p
        O5mqoNxzgJuEjNkOKA0AzqLjtFc4+tTqbXfH4gIAwCRP/8uF3/Pu8acdNMmUYOcfaBWwVl0AcN4/N9aA
        g09dFswxAQBgCgDo/0X4OowAQAKrgID7L3Lq8ahtgNIA4L53jfWNcPIpxC3C5M5AEWwBpgr+BVyvKVRb
        n9kACLX859iqQKUBwFV1HW2twqA3aKYTkBbVYrPLY8kRA5gaApGmcjnQ9Ul7LWi0QsLX2SRXH6oeAxgJ
        BPLy1txkkktxoU9kamiUm6RMNCQUABhPxSJi2iGPwfZ2N8fKa6G4HLRCel30N96pvUQgLn/lLQEfC0I9
        cstxbkiCrsDTPQ68XAwYrxP99TdBcQ0Yr6X35RLt9wOAkAp86qmthWkur81EFaIfAACAWgAIAAAAAAAI
        AAAAAAAIAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAABAcQAMhyFZAMCpdwSSvy6Bjqto8hbhagGAMwA5
        HdjV3CyckCx+Lzra2uSS6WEAIMmqwO+IPsv9ItTyggi2/haKK9TynIiYK8dWAaoJgFB3p9zwYmQmH3SC
        6D1pqG+I9QIAABJzfsNVsYrA3t5YVSA0St7eLoLBb+TOSap3BOL8fx7CiY5Ak/cC4JLp8WYVAgBjC4FC
        zc+cUPmG0t/xRoQzHMPW3eoDINzTJQ/DhKNPrR63Cw1BpiwA+rbwez5AQ5CEOgK9KgZ169RtCMLLfyMA
        kJDQESjRjkAGACChjkB/HlsZqDQAuM7d1NCEZiBTiFdJDEtsAaYaALpWBNt+j45AiXQEoq3S4Ier1Q8C
        8tKW+wIiDjB+R2B+5ROBY+P0BQAAxq4C+htuE77OxnhHILQCH09+z/tiwHi9+jGAkbZgvg6PaLZahbnR
        JEyNTRCJT0Z4XkI3Lf0/GqcdGAAwsXj4RbDtJeHv0BEMGkj1s1wNsvyeoyLU+gsxUH+Ddo4BR3Qs5JdP
        BaBPxO3SkAg0Ha2Sp99wPkBU/11oRHXfpvelBB2BkAo8W1KBC6ExQi0AAIBaAAgAAAAAAAgAAAAAAAgA
        AABmaldgjeyvR+UrqCitAoAj3kMBnyLiCPtk/fZHnU7Q9yl1XeNdJwAwzaIg3XoR1V9JukoBXTlxhd3J
        jk9ONniIru8t0pvKavAg6b1JQKAGAI6FAnK1GxcFNdU3isb6hrSLz9k5uWZgnAKbExXp7RZtdoecrajE
        dY1Wo7A0meSSYIYBAJCoVotI4xa5ItDXZZan4Xi77WmUg36PRU6tjZi2j523d4Lzs9P3164QkTvzRORm
        0o/jr0qIf9eteaL/PnLwl1dpAwBc597ldAqDXvlMQE4/tprMIurvHffauPqOx5VxWa6alYD82uZwyHkS
        AEACswEbN5FD2uLpwMrO3OPxWxHTzvFXAoeLRP+9y0Xf1bmi7/sq6qpcEdmYL6Kvrhq7ElAaAOx8TQ2N
        qtYCdDrbxr229pYWzdQocMFUsAu1AFPu+XXrRMD5soq1ACERaD9I24HLRkOgrkgM/KpA9F0Xd8KrVRZd
        Q3/1ith2RE0A8E3NdQBq5tq32u1j8uw5HuGwWDVVpIRqwESrAY0qVgMG5C3BgOGasQA4sFIbzn91fBWw
        fbkYfFdlAPSp3A+Al/fOZseYgCADQG5UopmiIL0cCwAApuoHcIXwe95TEQBBefQ2BwVPBkD/vhWy42kC
        AASiSHk+bUsKR28DlAYAz7x3WCyq7bN59eHv9Ix7IgEAZGIMYLUIO574pPON0p12CADBlv+M59sXjV4B
        AAATrwI4GKdoT0CusTfWy041bpmtBgEgxyoAgAS2Ad+N9QTo7YqVBCvVb6+3RwRcfxq7/AcAEmsMwkeB
        HW2twqOA2Jm4HdlEuQAAQIZ3Ba67TI7GhxxPilDzs3Lzi7TK8TMRMVfFqu3GOwEAABLQSTd3WhWZOikJ
        AJgJcwGU1gSJQABAhqXYAgCoBUilAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIDxA4GKCACY+QBYRTd0gXJC
        EPAUnrhBv5wWzEeBPe2utMvX0S4PJAUAZuYxIDcE7W+4RfRZHxR9tj3pl/Uh0d94x9hJOwBAYpOBm602
        RScEcfUhFyExcIaRCDSzEoHqLhOh5n8X3u5W+vf2knwKyCu8PS4RbP2V3IkYiUBJtAJvtdlVcTR58q5x
        gok7SAXO2BVA2LY3NhlYlVRgnwg7fja2JwAAMHHDDXZCNR3L3dwMAMyYYqDLhL/9HXWLgToMclUiioES
        LgeuV7cc2IZy4BlVDtypdjlwc2aUA+/QQDnwgK9Hbn+lZscdT2vruNfG/x3DQTMMALpLRMD1enwuoDor
        AC5H5rLkUQDgdmC/KRB91+dppyFI7QoNtASjJ297a4tqT3/uDdg/QV9ADk5ylWLdCa25MBw0A1qCmXbK
        AbnYKkDJlmBB4e3tlE8Exr22I7QNeIi2AdfEnsBqtgWLbMkX0T8Vqt8SjMWdb/lpy1F5LtHlp11aRb+j
        wdggL/HD3V2Tr1AIDu6WZmEhEGA4aIYcA+pKRMRyrzwI09vjJLkVkJP2/npy/t0THwXqYt2ABx5fKSJl
        +SJye56I3KawNueL/kdXiOhrq8bvDKxWHsBwOFYS3NfbLfp60i9+6k81ePPEVQo7IIaDZlYiEMcD+utv
        ls/n066Gn8S7ABVN3hp8xOk4+PY2bVkOKisG0OAHGmsLDmEwSPoGg2igFBiDQSAAAKPBMBoMAgAAAAAA
        AgAAAAAAAgAUAEAhlMwAUzUBMByvDYA+0VQDTAGAyRy/KDYgtO4SaETHjygLtQMAdnw+j+dkl2arFTpB
        PBPQ3+EZNwkIAJjY+QeM18mdegOuP4qA+w1oRK5XRdi+X0T13xsfAmoAwEc3OCfmjPTrh04QvSc8vIQL
        gYaRCZiY89ffEJ8OFIhnA0KfKJYiHXC9IY81HwMBpQEwFPDKI7CVngycaWJA8gAVAGDqLECuyVevGChz
        FLYfUH8FwAUualYDZpK6XS5UA05ZDfgdWlHqAIAEipa4aIqLp0atAgAAAAAAmA0KyWPMOEiqKgCGAj5s
        AbAFSO0WoOUXAMCUnYt4C/CYNoKAHOXmngAMAQT+xg8Ccj9ABAETPQH4ofB7jsRv9BACfyeKh5h6fbGn
        /3gnAWrlAfCgTi67xdHfaDn5GLATx4DJQ+BaeUw4H3vh+O8EOV8RYVttvHKxUHuZgEj+QSJQKhOBBpEI
        NEqDWkwEgpAKjFRgpAJDAACKgVAMBAEAAAAAAAEAcEgAAAIAIAAAAgAgAAACACAAAAIAIAAAAgAgAAAA
        AAAgAAAAAAAgAAAAAAAgAAAAmAQAPo0D4EMAINMA8CCcUR19FA4kCwC3zx/4B4KAZgFAuojkhUOqBIC3
        85MEQDhwJd2MQTik8ooGA0l1gyFYHA4FAmcHAwEtA+ArJAMcUgV9wFOE85IBwDCvAP6W9AzpGJxS2eV/
        0J+489Pe3+f3+69q7/BKkbBGAXC0SIoeWfkpuhlvJgXhlAo//Q+vSMb5PyJY/JJWACGCQOBcuilrSR7S
        MBw0feJBKkOhQMLO7409+R0Bn//GoT7f6X1BvxQOaXoFIA3pVv/1oK7oX+nretIQHDT9T/7Bd5Jw/rfy
        /OT8tYOH8r/8/wH7gpXpxDsE9AAAAABJRU5ErkJggg==
</value>
  </data>
</root>